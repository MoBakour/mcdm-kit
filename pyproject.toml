[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcdm-kit"
version = "0.1.0"
description = "A comprehensive Python framework for Multi-Criteria Decision Making (MCDM) with support for fuzzy extensions and hybrid methods"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ["mcdm", "decision-making", "fuzzy-sets", "topsis", "mabac", "cimas"]
authors = [
    { name = "MoBakour", email = "mo.bakour@outlook.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
]
dependencies = [
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "scipy>=1.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "flake8>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/MoBakour/mcdm-kit"
Documentation = ""
Repository = "https://github.com/yourusername/mcdm-kit.git"
Issues = "https://github.com/MoBakour/mcdm-kit/issues"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=mcdm_kit"

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.coverage.run]
source = ["mcdm_kit"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "pass",
    "raise ImportError",
] 